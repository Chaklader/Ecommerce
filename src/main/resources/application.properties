server.port=8081

spring.thymeleaf.cache=false
spring.application.name=Bootstrap Spring Boot
spring.thymeleaf.enabled=true 
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.devtools.restart.additional-paths=.


security.basic.enabled=true
security.user.name=john
security.user.password=123


# Set here configurations for the database connection
spring.datasource.url=jdbc:mysql://localhost:3306/Bookstore

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# login information's
spring.datasource.username=testuser
spring.datasource.password=testpassword


# server error path
server.error.path=/error
server.error.whitelabel.enabled=false 



# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1


# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql=false

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto= create


# the email settings
# ------------------
spring.mail.host=smtp.gmail.com
spring.mail.username=omi.chaklader@gmail.com
spring.mail.password=mdfeehpkmekwvvvi
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.socketFactory.port=465
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.socketFactory.fallback=false
support.email=omi.chaklader@gmail.com
